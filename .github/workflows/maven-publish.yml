name: Maven CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github
        settings-path: ${{ github.workspace }} # Path for settings.xml

    - name: Configure Maven Settings
      run: |
        mkdir -p ~/.m2
        cp .github/workflows/settings.xml ~/.m2/settings.xml

    - name: Build with Maven
      run: mvn -B clean install --file pom.xml

    - name: Upload JAR to GitHub Releases
      uses: softprops/action-gh-release@v2
      if: success()  # Ensures previous steps succeeded
      with:
        files: target/kinder-app-1.0.1-SNAPSHOT.jar
        tag_name: v1.0.1
        release_name: "Kinder App v1.0.1"
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}

    # - name: Publish to GitHub Packages Apache Maven
    #   run: mvn deploy --settings ~/.m2/settings.xml
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GH_PAT }}

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: kinder-app-artifact
        path: target/kinder-app-1.0.1-SNAPSHOT.jar
        retention-days: 30
  deploy:
      needs: build  # Runs after build job
      runs-on: ubuntu-latest

      steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: terraform init
        working-directory: terraform

      - name: Terraform Apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: terraform apply -auto-approve
        working-directory: terraform

      - name: Get EC2 Instance IP
        id: ec2_ip
        run: echo "EC2_IP=$(terraform output -raw instance_ip)" >> $GITHUB_ENV
        working-directory: terraform

      - name: Wait for EC2 SSH to be ready
        run: |
          echo "Waiting for EC2 instance to be ready..."
          sleep 120

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ env.EC2_IP }}
          username: ubuntu
          key: ${{ secrets.AWS_SSH_KEY }}
          source: "target/kinder-app-1.0.1-SNAPSHOT.jar"
          target: "/home/ubuntu/app"

      - name: Start Application on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_IP }}
          username: ubuntu
          key: ${{ secrets.AWS_SSH_KEY }}
          script: |
            nohup java -jar /home/ubuntu/app/kinder-app-1.0.1-SNAPSHOT.jar > app.log 2>&1 &
